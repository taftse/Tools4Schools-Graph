<?php


namespace Tools4Schools\Graph\Types;


use Tools4Schools\Graph\Contracts\Schema\Types\ObjectType as ObjectTypeContract;
use Tools4Schools\Graph\Contracts\Schema\Types\Type;
use Tools4Schools\Graph\Schema\Types\ObjectType;
use Tools4Schools\Graph\Fields\Text;


class IntrospectionType extends ObjectType implements Type
{
    public $name = '__Type';

    protected $types = [];

    public function __construct(string $name = '',$value)
    {
        $this->value = $value;
        parent::__construct($name);
    }

    public function fields(): array
    {
        return [
            //Enum::make('__TypeKind',) // kind: __TypeKind!
            Text::make('name'), // name: String
            Text::make('description'), // name: String
            // description: String
            // fields(includeDeprecated: Boolean = false): [__Field!] (#OBJECT and INTERFACE only)
            // interfaces: [__Type!] (# OBJECT only)
            // possibleTypes: [__Type!] (# INTERFACE and UNION only)
            // enumValues(includeDeprecated: Boolean = false): [__EnumValue!] ( # ENUM only)
            // inputFields: [__InputValue!] # INPUT_OBJECT only
            // ofType: __Type ( # NON_NULL and LIST only)
        ];
    }

    protected function resolver(ObjectTypeContract $parent = null, array $arguments = [], $context = null, $info = null)
    {
        //dump($parent);
        return parent::resolver($parent, $arguments, $context, $info); // TODO: Change the autogenerated stub
    }
}